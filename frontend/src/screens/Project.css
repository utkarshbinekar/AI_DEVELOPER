/* import React, { useState } from 'react';
import { useLocation } from 'react-router-dom';

export const Project = () => {
  const location = useLocation();

  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedUserIds, setSelectedUserIds] = useState([]);

  const users = [
    { id: 1, name: 'User One' },
    { id: 2, name: 'User Two' },
    { id: 3, name: 'User Three' },
    { id: 4, name: 'User Four' },
    { id: 5, name: 'User Five' },
    { id: 6, name: 'User Six' },
    { id: 7, name: 'User Seven' },
    { id: 8, name: 'User Eight' },
    { id: 9, name: 'User Nine' },
    { id: 10, name: 'User Ten' }
  ];

  const handleUserClick = (userId) => {
    setSelectedUserIds((prevSelectedUserIds) =>
      prevSelectedUserIds.includes(userId)
        ? prevSelectedUserIds.filter((id) => id !== userId)
        : [...prevSelectedUserIds, userId]
    );
  };

  const handleAddCollaborators = () => {
    setIsModalOpen(false);
  };

  return (
    <main className='h-screen w-screen flex'>
      <section className="left relative flex flex-col h-full min-w-80 bg-gray-300">
        <header className="flex justify-between p-2 px-4 w-full bg-gray-100">
          <button
            className='flex gap-2 items-center cursor-pointer'
            onClick={() => setIsModalOpen(true)}
          >
            <i className="ri-add-fill mr-1"></i>
            <p>Add Collaborator</p>
          </button>
          <button
            onClick={() => setIsSidePanelOpen(!isSidePanelOpen)}
            className="p-2 cursor-pointer"
          >
            <i className="ri-group-fill"></i>
          </button>
        </header>

        <div className="conversation-area flex-grow flex flex-col">
          <div className="message-box p-1 flex-grow flex flex-col gap-1">
            <div className="message max-w-56 flex flex-col p-2 bg-gray-50 w-fit rounded-md">
              <small className='opacity-65 text-xs'>example@gmail.com</small>
              <p className='text-sm'>Lorem ipsum dolor sit Lorem ipsum dolor sit amet.</p>
            </div>
            <div className="ml-auto max-w-56 message flex flex-col p-2 bg-gray-50 w-fit rounded-md">
              <small className='opacity-65 text-xs'>example@gmail.com</small>
              <p className='text-sm'>Lorem ipsum dolor sit amet.</p>
            </div>
          </div>
          <div className="inputField w-full flex">
            <input
              className='p-2 px-4 border-none outline-none bg-white flex-grow'
              type="text" placeholder='Enter message' />
            <button className=' px-5 bg-gray-950 text-white cursor-pointer'>
              <i className="ri-send-plane-fill"></i>
            </button>
          </div>
        </div>

        <div
          className={`sidePanel w-full h-full flex flex-col gap-2 bg-gray-50 absolute top-0 transition-transform duration-300 ${isSidePanelOpen ? 'translate-x-0' : '-translate-x-full'
            }`}
        >
          <header className='flex justify-end px-4 w-full bg-gray-200'>
            <button
              onClick={() => setIsSidePanelOpen(!isSidePanelOpen)}
              className="p-2 cursor-pointer"
            >
              <i className="ri-close-fill"></i>
            </button>
          </header>
          <div className="users cursor-pointer hover:bg-gray-300 p-2 flex flex-col gap-2 ">
            {users.map(user => (
              <div
                key={user.id}
                className={`user flex items-center gap-2 p-2 hover:bg-gray-200 cursor-pointer ${selectedUserIds.includes(user.id) ? 'bg-gray-200' : ''}`}
                onClick={() => handleUserClick(user.id)}
              >
                <div className="aspect-square rounded-full w-fit h-fit flex items-center justify-center p-5 text-white bg-gray-600">
                  <i className="ri-user-fill absolute"></i>
                </div>
                <h1 className='font-semibold text-lg'>{user.name}</h1>
              </div>
            ))}
          </div>
        </div>
      </section>

      {isModalOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
          <div className="bg-white p-4 rounded-md w-80 relative flex flex-col">
            <header className="flex justify-between items-center mb-4">
              <h2 className="text-xl font-semibold">Select a User</h2>
              <button onClick={() => setIsModalOpen(false)} className="text-xl">&times;</button>
            </header>
            <div className="flex flex-col gap-2 max-h-96 overflow-auto">
              {users.map(user => (
                <div
                  key={user.id}
                  className={`user flex items-center gap-2 p-2 hover:bg-gray-200 cursor-pointer ${selectedUserIds.includes(user.id) ? 'bg-gray-200' : ''}`}
                  onClick={() => handleUserClick(user.id)}
                >
                  <div className="aspect-square relative rounded-full w-fit h-fit flex items-center justify-center p-5 text-white bg-gray-600">
                    <i className="ri-user-fill absolute"></i>
                  </div>
                  <h1 className='font-semibold text-lg'>{user.name}</h1>
                </div>
              ))}
            </div>
            <button
              className="mt-4 bg-blue-500 text-white px-4 py-2 rounded-md mx-auto"
              onClick={handleAddCollaborators}
            >
              Add Collaborators
            </button>
          </div>
        </div>
      )}
    </main>
  );
};

export default Project; 

*/